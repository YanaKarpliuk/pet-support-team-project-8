{"version":3,"file":"static/js/748.7805097a.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-toastify/src/utils/propValidator.ts","../node_modules/react-toastify/src/utils/collapseToast.ts","../node_modules/react-toastify/src/utils/cssTransition.tsx","../node_modules/react-toastify/src/utils/mapper.ts","../node_modules/react-toastify/src/core/eventManager.ts","../node_modules/react-toastify/src/components/Icons.tsx","../node_modules/react-toastify/src/hooks/useToastContainer.ts","../node_modules/react-toastify/src/hooks/useToast.ts","../node_modules/react-toastify/src/components/CloseButton.tsx","../node_modules/react-toastify/src/components/ProgressBar.tsx","../node_modules/react-toastify/src/components/Toast.tsx","../node_modules/react-toastify/src/components/Transitions.tsx","../node_modules/react-toastify/src/components/ToastContainer.tsx","../node_modules/react-toastify/src/core/toast.ts","../node_modules/react-toastify/src/utils/constant.ts"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, useContext(LazyContext).strict, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { addDomEvent, useDomEvent } from '../events/use-dom-event.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    function onPointerStart(event, info) {\n        var _a;\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }\n    const callbackDependencies = [\n        Boolean(onTapStart),\n        Boolean(onTap),\n        Boolean(whileTap),\n        visualElement,\n    ];\n    const startPress = useCallback((event, info) => {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        onPointerStart(event, info);\n    }, callbackDependencies);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    const startAccessiblePress = useCallback(() => {\n        const stopKeydownListener = addDomEvent(visualElement.current, \"keydown\", (event) => {\n            if (event.key !== \"Enter\" || isPressing.current)\n                return;\n            isPressing.current = true;\n            cancelPointerEndListeners.current = addDomEvent(visualElement.current, \"keyup\", () => {\n                if (event.key !== \"Enter\" || !checkPointerEnd())\n                    return;\n                fireSyntheticPointerEvent(\"up\", visualElement.getProps().onTap);\n            }, eventOptions);\n            fireSyntheticPointerEvent(\"down\", onPointerStart);\n        });\n        const stopBlurListener = addDomEvent(visualElement.current, \"blur\", () => {\n            stopKeydownListener();\n            stopBlurListener();\n            if (isPressing.current) {\n                fireSyntheticPointerEvent(\"cancel\", onPointerCancel);\n            }\n        });\n    }, callbackDependencies);\n    useDomEvent(visualElement, \"focus\", hasPressListeners ? startAccessiblePress : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useRef, useCallback } from 'react';\n\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const isFocusActive = useRef(false);\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = visualElement.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, true);\n        isFocusActive.current = true;\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        if (!isFocusActive.current || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, false);\n        isFocusActive.current = false;\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { isValidElement } from 'react';\n\nexport const isNum = (v: any): v is Number =>\n  typeof v === 'number' && !isNaN(v);\n\nexport const isStr = (v: any): v is String => typeof v === 'string';\n\nexport const isFn = (v: any): v is Function => typeof v === 'function';\n\nexport const parseClassName = (v: any) => (isStr(v) || isFn(v) ? v : null);\n\nexport const getAutoCloseDelay = (\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) =>\n  toastAutoClose === false || (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n\nexport const canBeRendered = <T>(content: T): boolean =>\n  isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      const node = nodeRef.current!;\n      const classToToken = enterClassName.split(' ');\n\n      const onEntered = (e: AnimationEvent) => {\n        if (e.target !== nodeRef.current) return;\n\n        node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n        node.removeEventListener('animationend', onEntered);\n        node.removeEventListener('animationcancel', onEntered);\n        if (\n          animationStep.current === AnimationStep.Enter &&\n          e.type !== 'animationcancel'\n        ) {\n          node.classList.remove(...classToToken);\n        }\n      };\n\n      const onEnter = () => {\n        node.classList.add(...classToToken);\n        node.addEventListener('animationend', onEntered);\n        node.addEventListener('animationcancel', onEntered);\n      };\n\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      const node = nodeRef.current!;\n\n      const onExited = () => {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      };\n\n      const onExit = () => {\n        animationStep.current = AnimationStep.Exit;\n        node.className += ` ${exitClassName}`;\n        node.addEventListener('animationend', onExited);\n      };\n\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit<TData>(\n    event: Event.Show,\n    content: React.ReactNode | ToastContent<TData>,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React, { cloneElement, isValidElement } from 'react';\n\nimport { Theme, ToastProps, TypeOptions } from '../types';\nimport { Default, isFn, isNum, isStr } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nconst maybeIcon = (type: string): type is keyof typeof Icons => type in Icons;\n\nexport function getIcon({ theme, type, isLoading, icon }: ToastProps) {\n  let Icon: React.ReactNode = null;\n  const iconProps = { theme, type };\n\n  if (icon === false) {\n    // hide\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n\n  return Icon;\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState,\n  ReactElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isFn,\n  isNum,\n  isStr,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\n\nimport { getIcon } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => {\n      toastToRender.clear();\n      eventManager.emit(Event.WillUnmount, instance);\n    };\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      toastId == null ? [] : state.filter(id => id !== toastId)\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps = {\n      ...props,\n      style: props.toastStyle,\n      key: instance.toastKey++,\n      ...options,\n      toastId,\n      updateId,\n      data,\n      closeToast,\n      isIn: false,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count =\n          toastId == null\n            ? instance.count - instance.displayedToast\n            : instance.count - 1;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = toastId == null ? instance.props.limit! : 1;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    } as ToastProps;\n\n    toastProps.iconOut = getIcon(toastProps);\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content as ReactElement, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      // required for ios safari to prevent default swipe behavior\n      if (e.nativeEvent.type === 'touchstart') e.nativeEvent.preventDefault();\n\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        e.nativeEvent.type !== 'touchend' &&\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { Default, isFn, Type } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type = Type.DEFAULT,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const isHidden = hide || (controlledProgress && progress === 0);\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: isHidden ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={isHidden ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n","import React, { cloneElement, isValidElement, ReactNode } from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { CloseButton } from './CloseButton';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    iconOut,\n    closeOnClick,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    },\n    {\n      [`${Default.CSS_NAMESPACE}__toast--close-on-click`]: closeOnClick\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress || !autoClose;\n\n  const closeButtonProps = { closeToast, type, theme };\n  let Close: React.ReactNode = null;\n\n  if (closeButton === false) {\n    // hide\n  } else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (isValidElement(closeButton)) {\n    Close = cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {iconOut != null && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {iconOut}\n            </div>\n          )}\n          <div>{children as ReactNode}</div>\n        </div>\n        {Close}\n        <ProgressBar\n          {...(updateId && !isProgressControlled\n            ? { key: `pb-${updateId}` }\n            : {})}\n          rtl={rtl}\n          theme={theme}\n          delay={autoClose as number}\n          isRunning={isRunning}\n          isIn={isIn}\n          closeToast={closeToast}\n          hide={hideProgressBar}\n          type={type}\n          style={progressStyle}\n          className={progressClassName}\n          controlledProgress={isProgressControlled}\n          progress={progress || 0}\n        />\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst getConfig = (animationName: string, appendPosition = false) => ({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__${animationName}-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__${animationName}-exit`,\n  appendPosition\n});\n\nconst Bounce = cssTransition(getConfig('bounce', true));\n\nconst Slide = cssTransition(getConfig('slide', true));\n\nconst Zoom = cssTransition(getConfig('zoom'));\n\nconst Flip = cssTransition(getConfig('flip'));\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        ...toastProps.style,\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: 'top-right',\n  transition: Bounce,\n  autoClose: 5000,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn, Type } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent<any>;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\nlet TOAST_ID = 1;\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  return container && container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return `${TOAST_ID++}`;\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  return options && (isStr(options.toastId) || isNum(options.toastId))\n    ? options.toastId\n    : generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast<TData>(\n  content: ToastContent<TData>,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return <TData = unknown>(\n    content: ToastContent<TData>,\n    options?: ToastOptions\n  ) => dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast<TData = unknown>(\n  content: ToastContent<TData>,\n  options?: ToastOptions\n) {\n  return dispatchToast(content, mergeOptions(Type.DEFAULT, options));\n}\n\ntoast.loading = <TData = unknown>(\n  content: ToastContent<TData>,\n  options?: ToastOptions\n) =>\n  dispatchToast(\n    content,\n    mergeOptions(Type.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<\n  TData = unknown,\n  TError = unknown,\n  TPending = unknown\n> {\n  pending?: string | UpdateOptions<TPending>;\n  success?: string | UpdateOptions<TData>;\n  error?: string | UpdateOptions<TError>;\n}\n\nfunction handlePromise<TData = unknown, TError = unknown, TPending = unknown>(\n  promise: Promise<TData> | (() => Promise<TData>),\n  { pending, error, success }: ToastPromiseParams<TData, TError, TPending>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = <T>(\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      } as UpdateOptions);\n    } else {\n      // using toast.promise without loading\n      toast(params!.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(Type.SUCCESS);\ntoast.info = createToastByType(Type.INFO);\ntoast.error = createToastByType(Type.ERROR);\ntoast.warning = createToastByType(Type.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(Type.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Clear, id);\n  } else {\n    queue = queue.filter(t => id != null && t.options.toastId !== id);\n  }\n};\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = <TData = unknown>(\n  toastId: Id,\n  options: UpdateOptions<TData> = {}\n) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * @deprecated\n * Will be removed in the next major release.\n */\ntoast.POSITION = POSITION;\n\n/**\n * @deprecated\n * Will be removed in the next major release.\n */\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\n/**\n * @deprecated\n */\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\n/**\n * @deprecated\n */\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Type {\n  INFO = 'info',\n  SUCCESS = 'success',\n  WARNING = 'warning',\n  ERROR = 'error',\n  DEFAULT = 'default'\n}\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","onPointerStart","latestProps","callbackDependencies","startPress","startAccessiblePress","stopKeydownListener","stopBlurListener","whileFocus","isFocusActive","onFocus","isFocusVisible","matches","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","BoundingBoxDimension","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","arguments","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig","n","isNum","isStr","isFn","parseClassName","canBeRendered","content","isValidElement","cssTransition","enter","collapseDuration","appendPosition","collapse","isIn","preventExitTransition","nodeRef","enterClassName","exitClassName","animationStep","classToToken","onEntered","dispatchEvent","Event","classList","onExited","scrollHeight","minHeight","collapseToast","className","toToastItem","toast","status","containerId","toastId","theme","data","isLoading","icon","eventManager","list","emitQueue","off","cb","cancelEmit","timers","clearTimeout","emit","timer","Svg","_ref","rest","Icons","success","error","spinner","useToastContainer","useReducer","forceUpdate","useState","toastIds","setToastIds","containerRef","toastToRender","isToastActive","toastKey","displayedToast","count","queue","getToast","clearWaitingQueue","limit","removeToast","dequeueToast","shift","appendToast","toastContent","toastProps","staleId","buildToast","enableMultiContainer","updateId","closeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","toastStyle","toastClassName","bodyClassName","progressClassName","autoClose","deleteToast","removed","queueLen","freeSlot","toDequeue","iconOut","Icon","iconProps","cloneElement","onOpen","onClose","closeButton","getToastToRender","toRender","collection","newestOnTop","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","pauseOnHover","onClick","closeOnClick","nativeEvent","preventDefault","onDragMove","draggableDirection","offsetWidth","draggablePercent","offsetHeight","pauseToast","playToast","pauseOnFocusLoss","hasFocus","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","stopPropagation","fillRule","ProgressBar","userStyle","controlledProgress","rtl","isHidden","animationDuration","animationPlayState","defaultClassName","cx","classNames","role","Toast","hideProgressBar","Transition","bodyStyle","progressStyle","cssClasses","isProgressControlled","closeButtonProps","Close","getConfig","animationName","Bounce","ToastContainer","getClassName","toastList","containerStyle","displayName","defaultProps","latestInstance","containers","TOAST_ID","generateToastId","getToastId","dispatchToast","mergeOptions","createToastByType","loading","promise","pending","resetParams","resolver","baseParams","params","dismiss","catch","err","warn","dark","container","oldOptions","oldContent","nextOptions","onChange","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","containerInstance"],"sourceRoot":""}