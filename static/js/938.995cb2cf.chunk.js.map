{"version":3,"file":"static/js/938.995cb2cf.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, useContext(LazyContext).strict, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { addDomEvent, useDomEvent } from '../events/use-dom-event.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    function onPointerStart(event, info) {\n        var _a;\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }\n    const callbackDependencies = [\n        Boolean(onTapStart),\n        Boolean(onTap),\n        Boolean(whileTap),\n        visualElement,\n    ];\n    const startPress = useCallback((event, info) => {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        onPointerStart(event, info);\n    }, callbackDependencies);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    const startAccessiblePress = useCallback(() => {\n        const stopKeydownListener = addDomEvent(visualElement.current, \"keydown\", (event) => {\n            if (event.key !== \"Enter\" || isPressing.current)\n                return;\n            isPressing.current = true;\n            cancelPointerEndListeners.current = addDomEvent(visualElement.current, \"keyup\", () => {\n                if (event.key !== \"Enter\" || !checkPointerEnd())\n                    return;\n                fireSyntheticPointerEvent(\"up\", visualElement.getProps().onTap);\n            }, eventOptions);\n            fireSyntheticPointerEvent(\"down\", onPointerStart);\n        });\n        const stopBlurListener = addDomEvent(visualElement.current, \"blur\", () => {\n            stopKeydownListener();\n            stopBlurListener();\n            if (isPressing.current) {\n                fireSyntheticPointerEvent(\"cancel\", onPointerCancel);\n            }\n        });\n    }, callbackDependencies);\n    useDomEvent(visualElement, \"focus\", hasPressListeners ? startAccessiblePress : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useRef, useCallback } from 'react';\n\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const isFocusActive = useRef(false);\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = visualElement.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, true);\n        isFocusActive.current = true;\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        if (!isFocusActive.current || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, false);\n        isFocusActive.current = false;\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","onPointerStart","latestProps","callbackDependencies","startPress","startAccessiblePress","stopKeydownListener","stopBlurListener","whileFocus","isFocusActive","onFocus","isFocusVisible","matches","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isNumericalString","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","BoundingBoxDimension","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","arguments","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}