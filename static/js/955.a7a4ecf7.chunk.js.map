{"version":3,"file":"static/js/955.a7a4ecf7.chunk.js","mappings":"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","sources":["../node_modules/react-loader-spinner/dist/esm/loader/InfinitySpin.js","../node_modules/react-loader-spinner/dist/esm/type.js","../node_modules/styled-tools/dist/es/prop.js","../node_modules/styled-tools/dist/es/ifProp.js","../node_modules/react-loader-spinner/dist/esm/loader/RotatingLines.js","../node_modules/react-loader-spinner/dist/esm/loader/TailSpin.js","../node_modules/react-loader-spinner/dist/esm/loader/Triangle.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { DEFAULT_COLOR } from '../type';\nvar len = 242.776657104492;\nvar time = 1.6;\nvar anim = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  12.5% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n  43.75% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n  100% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n\"], [\"\\n  12.5% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n  43.75% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n  100% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n\"])), len * 0.14, len, len * 0.11, len * 0.35, len, len * 0.35, len * 0.01, len, len * 0.99);\nvar Path = styled.path(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  stroke-dasharray: \", \"px, \", \";\\n  stroke-dashoffset: 0;\\n  animation: \", \" \", \"s linear infinite;\\n\"], [\"\\n  stroke-dasharray: \", \"px, \", \";\\n  stroke-dashoffset: 0;\\n  animation: \", \" \", \"s linear infinite;\\n\"])), len * 0.01, len, anim, time);\nvar InfinitySpin = function (_a) {\n    var _b = _a.color, color = _b === void 0 ? DEFAULT_COLOR : _b, _c = _a.width, width = _c === void 0 ? '200' : _c;\n    return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"\".concat(width), height: \"\".concat(Number(width) * 0.5), viewBox: \"0 0 \".concat(width, \" \").concat(Number(200 * 0.5)), \"data-testid\": \"infinity-spin\" },\n        React.createElement(Path, { \"data-testid\": \"infinity-spin-path-1\", stroke: color, fill: \"none\", strokeWidth: \"4\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeMiterlimit: \"10\", d: \"M93.9,46.4c9.3,9.5,13.8,17.9,23.5,17.9s17.5-7.8,17.5-17.5s-7.8-17.6-17.5-17.5c-9.7,0.1-13.3,7.2-22.1,17.1 c-8.9,8.8-15.7,17.9-25.4,17.9s-17.5-7.8-17.5-17.5s7.8-17.5,17.5-17.5S86.2,38.6,93.9,46.4z\" }),\n        React.createElement(\"path\", { \"data-testid\": \"infinity-spin-path-2\", opacity: \"0.07\", fill: \"none\", stroke: color, strokeWidth: \"4\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeMiterlimit: \"10\", d: \"M93.9,46.4c9.3,9.5,13.8,17.9,23.5,17.9s17.5-7.8,17.5-17.5s-7.8-17.6-17.5-17.5c-9.7,0.1-13.3,7.2-22.1,17.1 c-8.9,8.8-15.7,17.9-25.4,17.9s-17.5-7.8-17.5-17.5s7.8-17.5,17.5-17.5S86.2,38.6,93.9,46.4z\" })));\n};\nexport default InfinitySpin;\nvar templateObject_1, templateObject_2;\n","export var DEFAULT_COLOR = '#4fa94d';\nexport var DEFAULT_WAI_ARIA_ATTRIBUTE = {\n    'aria-busy': true,\n    role: 'status',\n};\n","/**\n * Returns the value of `props[path]` or `defaultValue`\n * @example\n * import styled from \"styled-components\";\n * import { prop } from \"styled-tools\";\n *\n * const Button = styled.button`\n *   color: ${prop(\"color\", \"red\")};\n * `;\n */\nvar prop = function prop(path, defaultValue) {\n  return function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof props[path] !== \"undefined\") {\n      return props[path];\n    }\n\n    if (path && path.indexOf(\".\") > 0) {\n      var paths = path.split(\".\");\n      var length = paths.length;\n      var object = props[paths[0]];\n      var index = 1;\n\n      while (object != null && index < length) {\n        object = object[paths[index]];\n        index += 1;\n      }\n\n      if (typeof object !== \"undefined\") {\n        return object;\n      }\n    }\n\n    return defaultValue;\n  };\n};\n\nexport default prop;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable no-use-before-define */\nimport prop from \"./prop\";\n\nvar parseFunction = function parseFunction(props, test) {\n  return Boolean(test(props));\n};\n\nvar parseObject = function parseObject(props, test) {\n  var keys = Object.keys(test);\n  var length = keys.length;\n\n  for (var index = 0; index < length; index += 1) {\n    var key = keys[index];\n    var expected = test[key];\n    var value = prop(key)(props);\n\n    if (expected !== value) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar parseString = function parseString(props, test) {\n  return Boolean(prop(test)(props));\n};\n\nvar parseMap = {\n  function: parseFunction,\n  object: parseObject,\n  string: parseString\n};\n/**\n * Returns `pass` if prop is truthy. Otherwise returns `fail`\n * @example\n * import styled from \"styled-components\";\n * import { ifProp, palette } from \"styled-tools\";\n *\n * const Button = styled.button`\n *   background-color: ${ifProp(\"transparent\", \"transparent\", palette(0))};\n *   color: ${ifProp([\"transparent\", \"accent\"], palette(\"secondary\"))};\n *   font-size: ${ifProp({ size: \"large\" }, \"20px\", ifProp({ size: \"medium\" }, \"16px\", \"12px\"))};\n * `;\n */\n\nvar ifProp = function ifProp(test) {\n  var pass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var fail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  return function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var result = true;\n\n    if (Array.isArray(test)) {\n      var length = test.length;\n      var index = 0;\n\n      while (result && index < length) {\n        result = parseMap[_typeof(test[index])](props, test[index]);\n        index += 1;\n      }\n    } else {\n      result = parseMap[_typeof(test)](props, test);\n    }\n\n    var value = result ? pass : fail;\n    return typeof value === \"function\" ? value(props) : value;\n  };\n};\n\nexport default ifProp;","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useCallback } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { prop } from 'styled-tools';\nimport { DEFAULT_COLOR, DEFAULT_WAI_ARIA_ATTRIBUTE } from '../type';\nvar spin = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n to {\\n    transform: rotate(360deg);\\n  }\\n\"], [\"\\n to {\\n    transform: rotate(360deg);\\n  }\\n\"])));\nvar POINTS = [0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330];\nvar Svg = styled.svg(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  animation: \", \" 0.75s steps(12, end) infinite;\\n  animation-duration: \", \"s;\\n\"], [\"\\n  animation: \", \" 0.75s steps(12, end) infinite;\\n  animation-duration: \", \"s;\\n\"])), spin, prop('speed', '0.75'));\nvar Polyline = styled.polyline(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  stroke-width: \", \"px;\\n  stroke-linecap: round;\\n\\n  &:nth-child(12n + 0) {\\n    stroke-opacity: 0.08;\\n  }\\n\\n  &:nth-child(12n + 1) {\\n    stroke-opacity: 0.17;\\n  }\\n\\n  &:nth-child(12n + 2) {\\n    stroke-opacity: 0.25;\\n  }\\n\\n  &:nth-child(12n + 3) {\\n    stroke-opacity: 0.33;\\n  }\\n\\n  &:nth-child(12n + 4) {\\n    stroke-opacity: 0.42;\\n  }\\n\\n  &:nth-child(12n + 5) {\\n    stroke-opacity: 0.5;\\n  }\\n\\n  &:nth-child(12n + 6) {\\n    stroke-opacity: 0.58;\\n  }\\n\\n  &:nth-child(12n + 7) {\\n    stroke-opacity: 0.66;\\n  }\\n\\n  &:nth-child(12n + 8) {\\n    stroke-opacity: 0.75;\\n  }\\n\\n  &:nth-child(12n + 9) {\\n    stroke-opacity: 0.83;\\n  }\\n\\n  &:nth-child(12n + 11) {\\n    stroke-opacity: 0.92;\\n  }\\n\"], [\"\\n  stroke-width: \", \"px;\\n  stroke-linecap: round;\\n\\n  &:nth-child(12n + 0) {\\n    stroke-opacity: 0.08;\\n  }\\n\\n  &:nth-child(12n + 1) {\\n    stroke-opacity: 0.17;\\n  }\\n\\n  &:nth-child(12n + 2) {\\n    stroke-opacity: 0.25;\\n  }\\n\\n  &:nth-child(12n + 3) {\\n    stroke-opacity: 0.33;\\n  }\\n\\n  &:nth-child(12n + 4) {\\n    stroke-opacity: 0.42;\\n  }\\n\\n  &:nth-child(12n + 5) {\\n    stroke-opacity: 0.5;\\n  }\\n\\n  &:nth-child(12n + 6) {\\n    stroke-opacity: 0.58;\\n  }\\n\\n  &:nth-child(12n + 7) {\\n    stroke-opacity: 0.66;\\n  }\\n\\n  &:nth-child(12n + 8) {\\n    stroke-opacity: 0.75;\\n  }\\n\\n  &:nth-child(12n + 9) {\\n    stroke-opacity: 0.83;\\n  }\\n\\n  &:nth-child(12n + 11) {\\n    stroke-opacity: 0.92;\\n  }\\n\"])), function (props) { return props.width; });\nexport default function RotatingLines(_a) {\n    var _b = _a.strokeColor, strokeColor = _b === void 0 ? DEFAULT_COLOR : _b, _c = _a.strokeWidth, strokeWidth = _c === void 0 ? '5' : _c, _d = _a.animationDuration, animationDuration = _d === void 0 ? '0.75' : _d, _e = _a.width, width = _e === void 0 ? '96' : _e, _f = _a.visible, visible = _f === void 0 ? true : _f, _g = _a.ariaLabel, ariaLabel = _g === void 0 ? 'rotating-lines-loading' : _g;\n    var lines = useCallback(function () {\n        return POINTS.map(function (point) { return (React.createElement(Polyline, { key: point, points: \"24,12 24,4\", width: strokeWidth, transform: \"rotate(\".concat(point, \", 24, 24)\") })); });\n    }, [strokeWidth]);\n    return !visible ? null : (React.createElement(Svg, __assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 48 48\", width: width, stroke: strokeColor, speed: animationDuration, \"data-testid\": \"rotating-lines-svg\", \"aria-label\": ariaLabel }, DEFAULT_WAI_ARIA_ATTRIBUTE), lines()));\n}\nvar templateObject_1, templateObject_2, templateObject_3;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { getDefaultStyle } from '../helpers';\nimport { DEFAULT_COLOR, DEFAULT_WAI_ARIA_ATTRIBUTE } from '../type';\nexport var TailSpin = function (_a) {\n    var _b = _a.height, height = _b === void 0 ? 80 : _b, _c = _a.width, width = _c === void 0 ? 80 : _c, _d = _a.radius, radius = _d === void 0 ? 1 : _d, _e = _a.color, color = _e === void 0 ? DEFAULT_COLOR : _e, _f = _a.ariaLabel, ariaLabel = _f === void 0 ? 'tail-spin-loading' : _f, wrapperStyle = _a.wrapperStyle, wrapperClass = _a.wrapperClass, _g = _a.visible, visible = _g === void 0 ? true : _g;\n    return (React.createElement(\"div\", __assign({ style: __assign(__assign({}, getDefaultStyle(visible)), wrapperStyle), className: wrapperClass, \"data-testid\": \"tail-spin-loading\", \"aria-label\": ariaLabel }, DEFAULT_WAI_ARIA_ATTRIBUTE),\n        React.createElement(\"svg\", { width: width, height: height, viewBox: \"0 0 38 38\", xmlns: \"http://www.w3.org/2000/svg\", \"data-testid\": \"tail-spin-svg\" },\n            React.createElement(\"defs\", null,\n                React.createElement(\"linearGradient\", { x1: \"8.042%\", y1: \"0%\", x2: \"65.682%\", y2: \"23.865%\", id: \"a\" },\n                    React.createElement(\"stop\", { stopColor: color, stopOpacity: \"0\", offset: \"0%\" }),\n                    React.createElement(\"stop\", { stopColor: color, stopOpacity: \".631\", offset: \"63.146%\" }),\n                    React.createElement(\"stop\", { stopColor: color, offset: \"100%\" }))),\n            React.createElement(\"g\", { fill: \"none\", fillRule: \"evenodd\" },\n                React.createElement(\"g\", { transform: \"translate(1 1)\" },\n                    React.createElement(\"path\", { d: \"M36 18c0-9.94-8.06-18-18-18\", id: \"Oval-2\", stroke: color, strokeWidth: \"2\" },\n                        React.createElement(\"animateTransform\", { attributeName: \"transform\", type: \"rotate\", from: \"0 18 18\", to: \"360 18 18\", dur: \"0.9s\", repeatCount: \"indefinite\" })),\n                    React.createElement(\"circle\", { fill: \"#fff\", cx: \"36\", cy: \"18\", r: radius },\n                        React.createElement(\"animateTransform\", { attributeName: \"transform\", type: \"rotate\", from: \"0 18 18\", to: \"360 18 18\", dur: \"0.9s\", repeatCount: \"indefinite\" })))))));\n};\nexport default TailSpin;\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { getDefaultStyle } from '../helpers';\nimport { DEFAULT_COLOR, DEFAULT_WAI_ARIA_ATTRIBUTE } from '../type';\nvar dash = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n to {\\n    stroke-dashoffset: 136;\\n  }\\n\"], [\"\\n to {\\n    stroke-dashoffset: 136;\\n  }\\n\"])));\nvar Polygon = styled.polygon(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  stroke-dasharray: 17;\\n  animation: \", \" 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;\\n\"], [\"\\n  stroke-dasharray: 17;\\n  animation: \", \" 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;\\n\"])), dash);\nvar SVG = styled.svg(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  transform-origin: 50% 65%;\\n\"], [\"\\n  transform-origin: 50% 65%;\\n\"])));\nvar Triangle = function (_a) {\n    var _b = _a.height, height = _b === void 0 ? 80 : _b, _c = _a.width, width = _c === void 0 ? 80 : _c, _d = _a.color, color = _d === void 0 ? DEFAULT_COLOR : _d, _e = _a.ariaLabel, ariaLabel = _e === void 0 ? 'triangle-loading' : _e, wrapperStyle = _a.wrapperStyle, wrapperClass = _a.wrapperClass, _f = _a.visible, visible = _f === void 0 ? true : _f;\n    return (React.createElement(\"div\", __assign({ style: __assign(__assign({}, getDefaultStyle(visible)), wrapperStyle), className: \"\".concat(wrapperClass), \"data-testid\": \"triangle-loading\", \"aria-label\": ariaLabel }, DEFAULT_WAI_ARIA_ATTRIBUTE),\n        React.createElement(SVG, { id: \"triangle\", width: width, height: height, viewBox: \"-3 -4 39 39\", \"data-testid\": \"triangle-svg\" },\n            React.createElement(Polygon, { fill: \"transparent\", stroke: color, strokeWidth: \"1\", points: \"16,0 32,32 0,32\" }))));\n};\nexport default Triangle;\nvar templateObject_1, templateObject_2, templateObject_3;\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, useContext(LazyContext).strict, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { addDomEvent, useDomEvent } from '../events/use-dom-event.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    function onPointerStart(event, info) {\n        var _a;\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }\n    const callbackDependencies = [\n        Boolean(onTapStart),\n        Boolean(onTap),\n        Boolean(whileTap),\n        visualElement,\n    ];\n    const startPress = useCallback((event, info) => {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        onPointerStart(event, info);\n    }, callbackDependencies);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    const startAccessiblePress = useCallback(() => {\n        const stopKeydownListener = addDomEvent(visualElement.current, \"keydown\", (event) => {\n            if (event.key !== \"Enter\" || isPressing.current)\n                return;\n            isPressing.current = true;\n            cancelPointerEndListeners.current = addDomEvent(visualElement.current, \"keyup\", () => {\n                if (event.key !== \"Enter\" || !checkPointerEnd())\n                    return;\n                fireSyntheticPointerEvent(\"up\", visualElement.getProps().onTap);\n            }, eventOptions);\n            fireSyntheticPointerEvent(\"down\", onPointerStart);\n        });\n        const stopBlurListener = addDomEvent(visualElement.current, \"blur\", () => {\n            stopKeydownListener();\n            stopBlurListener();\n            if (isPressing.current) {\n                fireSyntheticPointerEvent(\"cancel\", onPointerCancel);\n            }\n        });\n    }, callbackDependencies);\n    useDomEvent(visualElement, \"focus\", hasPressListeners ? startAccessiblePress : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useRef, useCallback } from 'react';\n\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const isFocusActive = useRef(false);\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = visualElement.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, true);\n        isFocusActive.current = true;\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        if (!isFocusActive.current || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, false);\n        isFocusActive.current = false;\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["templateObject_1","templateObject_2","DEFAULT_COLOR","DEFAULT_WAI_ARIA_ATTRIBUTE","role","__makeTemplateObject","cooked","raw","Object","defineProperty","value","len","anim","keyframes","styled","path","defaultValue","props","arguments","length","undefined","indexOf","paths","split","object","index","templateObject_3","__assign","assign","t","s","i","n","p","prototype","hasOwnProperty","call","apply","this","spin","POINTS","Svg","prop","Polyline","width","RotatingLines","_a","_b","strokeColor","_c","strokeWidth","_d","animationDuration","_e","_f","visible","_g","ariaLabel","lines","useCallback","map","point","React","key","points","transform","concat","xmlns","viewBox","stroke","speed","dash","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","blockInitialAnimation","initial","render","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","onPointerStart","latestProps","callbackDependencies","startPress","startAccessiblePress","stopKeydownListener","stopBlurListener","whileFocus","isFocusActive","onFocus","isFocusVisible","matches","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","isEasingArray","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","BoundingBoxDimension","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}