{"version":3,"file":"static/js/638.0ba2aa03.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.js"],"sourcesContent":["import { Field } from 'formik';\nimport { AiOutlineEye } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport styled from 'styled-components';\nimport theme from '../../theme';\n\nexport const FormWrap = styled.div`\n  width: 100%;\n  padding: 0px 20px 0px 20px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    position: fixed;\n    top: 50%;\n    right: 50%;\n    transform: translate(50%, -50%);\n    width: 608px;\n    padding: 60px 80px 40px 80px;\n    background-color: ${theme.colors.white};\n    margin: 0;\n    border-radius: 40px;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n  }\n\n  @media screen and (min-width: 1280px) {\n    top: 114px;\n    transform: translate(50%, 0%);\n    width: 618px;\n    padding-bottom: 60px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: ${theme.fontSizes.ml};\n  font-weight: ${theme.fontWeights.bold};\n  line-height: 1.33;\n  text-align: center;\n  margin: 0;\n  margin-bottom: 40px;\n  color: ${theme.colors.black};\n\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    font-weight: ${theme.fontWeights.normal};\n    line-height: 1.36;\n  }\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n  margin-bottom: ${({ isError }) => (isError ? '30px' : '16px')};\n`;\n\nexport const InputPassWrap = styled.div`\n  position: relative;\n  color: ${({ isShownPass }) => (isShownPass ? theme.colors.black : theme.colors.accent)};\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 40px;\n  font-family: inherit;\n  font-weight: ${theme.fontWeights.normal};\n  font-size: ${theme.fontSizes.m};\n  letter-spacing: 0.04em;\n  color: ${theme.colors.black};\n  padding: 11px 14px 12px 14px;\n  border: 1px solid ${theme.colors.accent};\n  outline: none;\n  border-radius: 40px;\n  background-color: transparent;\n  cursor: pointer;\n  caret-color: ${theme.colors.accent};\n  transition: all 100ms ease-in;\n\n  @media screen and (min-width: 768px) {\n    height: 52px;\n    font-size: 20px;\n    padding: 14px 14px 13px 32px;\n    background-color: ${theme.colors.bg};\n  }\n\n  &::placeholder {\n    font-family: inherit;\n    font-weight: 400;\n    font-size: ${theme.fontSizes.s};\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    color: rgba(17, 17, 17, 0.6);\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n      line-height: 1.38;\n    }\n  }\n\n  &:focus,\n  &:hover {\n    border: 2px solid ${theme.colors.accent};\n\n    @media screen and (min-width: 768px) {\n      border-width: 3px;\n    }\n  }\n`;\n\nexport const InputPass = styled(Input)`\n  color: inherit;\n  padding-right: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-right: 50px;\n  }\n`;\n\nexport const EyeIconSlash = styled.span`\n  display: ${({ isShownPass }) => (isShownPass ? 'none' : 'inline-block')};\n  position: absolute;\n  right: 22px;\n  top: 6px;\n  width: 1.5px;\n  height: 28px;\n  border-radius: 2px;\n  background-color: ${theme.colors.accent};\n  transform: rotate(40deg);\n  pointer-events: none;\n\n  @media screen and (min-width: 768px) {\n    right: 30px;\n    top: 9px;\n    height: 30px;\n    transform: rotate(50deg);\n  }\n`;\n\nexport const EyeIcon = styled(AiOutlineEye)`\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  right: 10px;\n  top: 8px;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 30px;\n    height: 30px;\n    right: 15px;\n    top: 10px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  line-height: 1.33;\n  text-align: center;\n  letter-spacing: 0.04em;\n  margin-top: 40px;\n  color: ${theme.colors.blackSemitransparent};\n`;\n\nexport const LinkToRegister = styled(Link)`\n  color: ${theme.colors.blue};\n  text-decoration: underline;\n  margin-left: 4px;\n  cursor: pointer;\n  transition: all 50ms ease-out;\n\n  &:focus,\n  &:hover {\n    color: ${theme.colors.accent};\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 44px;\n  font-weight: ${theme.fontWeights.normal};\n  font-size: 20px;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  padding: 0px;\n  margin-top: 40px;\n  color: ${theme.colors.white};\n  background-color: ${theme.colors.accent};\n  border: none;\n  border-radius: 40px;\n  cursor: pointer;\n  transition: all 150ms ease-out;\n\n  &:focus,\n  &:hover {\n    outline: none;\n    background-color: ${theme.colors.accentHover};\n    box-shadow: 0px 15px 20px rgba(65, 65, 65, 0.4);\n    transform: scale(1.01);\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 48px;\n  }\n`;\n\nexport const StyledToastContainer = styled(ToastContainer)`\n  .Toastify__toast {\n    font-family: ${theme.fonts.manrope};\n    min-width: 100px;\n    min-height: 50px;\n    background-color: #fde6d8;\n    color: ${theme.colors.black};\n\n    @media screen and (${theme.media.fromTablet}) {\n      width: 250px;\n      min-height: 60px;\n    }\n    @media screen and (min-width: 768px) {\n      width: 300px;\n      min-height: 70px;\n    }\n  }\n  --toastify-icon-color-error: #ea0808;\n  .Toastify__progress-bar {\n    background-color: ${theme.colors.accent};\n  }\n  .Toastify__close-button:hover,\n  .Toastify__close-button:focus {\n    color: ${theme.colors.accent};\n  }\n`;\n","import { Form, Formik } from 'formik';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from '../../components/Loader/Loader';\nimport authOperations from '../../redux/auth/authOperations';\nimport authStore from '../../redux/auth/authReducer';\nimport authSelectors from '../../redux/auth/authSelectors';\nimport toastOptions from '../../utils/toastErrorOptions';\n\nimport schemas from '../../schemas/schemas';\nimport FormError from '../FormError/FormError';\nimport {\n  Button,\n  EyeIcon,\n  EyeIconSlash,\n  FormWrap,\n  Input,\n  InputPass,\n  InputPassWrap,\n  InputWrap,\n  LinkToRegister,\n  StyledToastContainer,\n  Text,\n  Title,\n} from './LoginForm.styled';\n\nconst { LoginSchema } = schemas;\nconst { login } = authOperations;\nconst { selectError, selectIsLoading } = authSelectors;\n\nconst { removeError } = authStore;\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = () => {\n  const [isShownPass, setIsShownPass] = useState(false);\n  const [viewportWidth, setViewportWidth] = useState(null);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    setViewportWidth(window.innerWidth);\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error, toastOptions);\n      dispatch(removeError());\n    }\n  }, [error, dispatch]);\n\n  const togglePassword = () => setIsShownPass(isShown => !isShown);\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const { email, password } = values;\n    const normalizedEmail = email.trim().toLowerCase();\n    const { error } = await dispatch(login({ email: normalizedEmail, password }));\n    if (!error) {\n      resetForm();\n      return;\n    }\n  };\n\n  return (\n    <FormWrap>\n      <Title>Login</Title>\n      <motion.div\n        initial={{ x: -320, opacity: 0 }}\n        transition={{ duration: 0.3, ease: 'easeInOut' }}\n        animate={{ x: 0, opacity: 1 }}\n      >\n        <Formik\n          initialValues={initialState}\n          validationSchema={LoginSchema}\n          validateOnChange={false}\n          validateOnBlur={false}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, setFieldValue }) => (\n            <Form autoComplete=\"off\">\n              <InputWrap isError={errors.email}>\n                <Input type=\"text\" name=\"email\" placeholder=\"Email\" />\n                {errors.email && <FormError name=\"email\" />}\n              </InputWrap>\n              <InputPassWrap isError={errors.password} isShownPass={isShownPass}>\n                <InputPass\n                  type={isShownPass ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={e => setFieldValue('password', e.target.value.trim(), false)}\n                />\n                <EyeIcon\n                  color={'#F59256'}\n                  onClick={togglePassword}\n                  title={isShownPass ? 'hide password' : 'show password'}\n                />\n                <EyeIconSlash isShownPass={isShownPass} />\n                {errors.password && <FormError name=\"password\" />}\n              </InputPassWrap>\n              <Button type=\"submit\">Login</Button>\n            </Form>\n          )}\n        </Formik>\n      </motion.div>\n      <Text>\n        Don't have an account?\n        <LinkToRegister to=\"/register\">Register</LinkToRegister>\n      </Text>\n      {isLoading && <Loader viewportWidth={viewportWidth} />}\n      <StyledToastContainer />\n    </FormWrap>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\nimport theme from '../../theme';\nimport desktopBgImg from '../../images/register/register-Down-BG-image-desktop.svg';\nimport mobileBgImg from '../../images/register/register-Down-BG-image-mobile.svg';\nimport tabletBgImg from '../../images/register/register-Down-BG-image-tablet.svg';\n\nexport const Container = styled.div`\n  font-family: ${theme.fonts.manrope};\n  width: 100%;\n  height: 100%;\n  padding-top: 100px;\n  background-color: ${theme.colors.bg};\n  background-image: url(${mobileBgImg});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 276px;\n    background-image: url(${tabletBgImg});\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 148px;\n    background-image: url(${desktopBgImg});\n  }\n`;\n","import { Helmet } from 'react-helmet';\n\nimport LoginForm from '../../components/LoginForm';\nimport { Container } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </Container>\n  );\n};\nexport default LoginPage;\n"],"names":["FormWrap","styled","theme","Title","InputWrap","isError","InputPassWrap","isShownPass","Input","Field","InputPass","EyeIconSlash","EyeIcon","AiOutlineEye","Text","LinkToRegister","Link","Button","StyledToastContainer","ToastContainer","LoginSchema","schemas","login","authOperations","selectError","authSelectors","selectIsLoading","removeError","authStore","initialState","email","password","useState","setIsShownPass","viewportWidth","setViewportWidth","dispatch","useDispatch","isLoading","useSelector","error","useEffect","window","innerWidth","toast","toastOptions","togglePassword","isShown","handleSubmit","values","resetForm","normalizedEmail","trim","toLowerCase","motion","initial","x","opacity","transition","duration","ease","animate","initialValues","validationSchema","validateOnChange","validateOnBlur","onSubmit","errors","setFieldValue","autoComplete","type","name","placeholder","FormError","onChange","e","target","value","color","onClick","title","to","Loader","Container","mobileBgImg","tabletBgImg","desktopBgImg","Helmet"],"sourceRoot":""}